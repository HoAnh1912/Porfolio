import type { GetStaticProps, NextPage } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import { BackToTop } from "../components/back-to-top";
import Cursor from "../components/mouse-cursor/components";
import Mainlayout from "../container/main-layout";
import Banner from "../features/home/banner";
import Project from "../features/home/project";
import Skill from "../features/home/skill";
import Contact from "../sections/contact";
import Footer from "../sections/footer";
import Header from "../sections/header";
import { GlobalStyle } from "../styles/globals";

export const getStaticProps: GetStaticProps = async ({ locale }: any) => {
  return {
    props: {
      ...(await serverSideTranslations(locale, [
        "common",
        "home",
        "project",
        "skill",
      ])),
    },
  };
};

const Home: NextPage = (props) => {
  const [showTopBtn, setShowTopBtn] = useState(false);
  const [visibleSection, setVisibleSection] = useState() as any;
  const [showContact, setShowContact] = useState(false);

  const headerSection = useRef(null);
  const skillSection = useRef(null);
  const projectSection = useRef(null);
  const homeSection = useRef(null);
  const contactSection = useRef(null);
  const headerRef = useRef(null);

  const sectionRefs = [
    { section: "Header", ref: headerSection },
    { section: "Home", ref: homeSection },
    { section: "Skills", ref: skillSection },
    { section: "Project", ref: projectSection },
    { section: "Contact", ref: contactSection },
  ];

  const scrollTo = (ele: any) => {
    ele?.scrollIntoView({
      behavior: "smooth",
      block: "start",
    });
  };

  useEffect(() => {
    const handleScroll = () => {};

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const getDimensions = (ele: any) => {
    const height = ele?.getBoundingClientRect();
    const offsetTop = ele?.offsetTop;
    const offsetBottom = offsetTop + height;

    return {
      height,
      offsetTop,
      offsetBottom,
    };
  };

  useEffect(() => {
    const handleScroll = () => {
      const { height: headerHeight } = getDimensions(headerSection.current);
      const scrollPosition = window.scrollY + headerHeight;

      const selected = sectionRefs.find(({ ref }) => {
        const ele = ref.current;
        if (ele) {
          const { offsetBottom, offsetTop } = getDimensions(ele);
          return scrollPosition > offsetTop && scrollPosition < offsetBottom;
        }
      });

      if (selected && selected.section !== visibleSection) {
        setVisibleSection(selected.section);
      } else if (!selected && visibleSection) {
        setVisibleSection(undefined);
      }
    };

    handleScroll();
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [visibleSection]);

  useEffect(() => {
    window.addEventListener("scroll", () => {
      if (window.scrollY > 500) {
        setShowTopBtn(true);
      } else {
        setShowTopBtn(false);
      }
    });
  }, []);

  const goToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  };

  const handleShowContact = () => {
    setShowContact(!showContact);
  };

  return (
    <>
      <Head>
        <title>My Porfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="shortcut icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=SourceCodePro:wght@200;700;800&display=swap"
          rel="stylesheet"
        ></link>
      </Head>
      <Mainlayout>
        {/* <Cursor /> */}
        <Header
          headerRef={headerRef}
          visibleSection={visibleSection}
          skillSection={skillSection}
          projectSection={projectSection}
          contactSection={contactSection}
          homeSection={homeSection}
          scrollTo={scrollTo}
          headerSection={headerSection}
          goToTop={goToTop}
        />
        {/* <Register /> */}
        <Banner
          homeSection={homeSection}
          handleShowContact={handleShowContact}
        />

        <Project projectSection={projectSection} />
        <Skill skillSection={skillSection} />
        <Footer contactSection={contactSection} />
        <BackToTop showTopBtn={showTopBtn} goToTop={goToTop} />
        <Contact showContact={showContact} handleContact={handleShowContact} />
        <GlobalStyle />
      </Mainlayout>
    </>
  );
};

export default Home;
